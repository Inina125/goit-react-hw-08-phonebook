{"version":3,"file":"static/js/794.e01ed138.chunk.js","mappings":"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","sources":["components/contactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/contactForm/ContactForm.js","components/filter/Filter.styled.js","components/filter/Filter.js","components/contactList/ContactList.styled.js","components/contactList/ContactList.js","pages/contacts/Contacts.styled.js","pages/contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst FormCont = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Field = styled.input`\n  color: #333;\n  border: 1px solid #ccc;\n  border-radius: 6px;\n  width: 300px;\n  height: 32px;\n  line-height: 32px;\n  padding: 0 10px;\n  margin: 8px 0;\n`;\n\nconst AddBtn = styled.button`\n  width: 300px;\n  height: 32px;\n  line-height: 32px;\n  padding: 0 5px;\n  margin: 5px 0px;\n  border-color: #ccc;\n  border-radius: 6px;\n  text-transform: capitalize;\n`;\n\nexport { FormCont, Field, AddBtn };\n","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.value;\n","import { FormCont } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { StyledButton, StyledInput, StyledLabel } from '../Styles';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (contacts.filter(item => item.name === name).length > 0) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <FormCont onSubmit={handleSubmit}>\n      <StyledLabel>\n        Name\n        <StyledInput type=\"text\" name=\"name\" placeholder=\"Enter contact name\" />\n      </StyledLabel>\n      <StyledLabel>\n        Phone\n        <StyledInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          placeholder=\"Enter phone\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </StyledLabel>\n\n      <StyledButton type=\"submit\">Add contact</StyledButton>\n    </FormCont>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nconst Title = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 8px;\n`;\n\nexport { Title };\n","import { Title } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { StyledInput } from '../Styles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const handleFilterChange = filter => dispatch(setFilter(filter));\n\n  const handleChange = event => {\n    handleFilterChange(event.target.value);\n  };\n\n  return (\n    <>\n      <Title>Find contacts by name</Title>\n      <StyledInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nconst ListCont = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 15px;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  min-width: 300px;\n  color: #333;\n  align-items: center;\n  height: 48px;\n  line-height: 48px;\n  justify-content: space-between;\n`;\n\nconst ContactDetails = styled.span``;\n\nconst DeleteBtn = styled.button`\n  font-size: 12px;\n  padding: 0 16px;\n  height: 22px;\n  line-height: 21px;\n  border: none;\n  border-radius: 10px;\n  font-weight: 500;\n  background-color: #ff5039;\n  color: white;\n  text-align: center;\n  text-transform: uppercase;\n  cursor: pointer;\n`;\n\nexport { ListCont, Item, DeleteBtn, ContactDetails };\n","import {\n  ContactDetails,\n  DeleteBtn,\n  Item,\n  ListCont,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n\n  if (!contacts) return null;\n\n  let contactItems = contacts;\n  if (filter) {\n    contactItems = contactItems.filter(item => item.name.includes(filter));\n  }\n\n  return (\n    <ListCont>\n      {contactItems.map(contact => (\n        <Item key={contact.id}>\n          <ContactDetails>\n            {contact.name}: {contact.number}\n          </ContactDetails>\n          <DeleteBtn onClick={() => dispatch(deleteContact(contact.id))}>\n            Delete\n          </DeleteBtn>\n        </Item>\n      ))}\n    </ListCont>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst ContactsCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: calc(100vh - 80px);\n  align-items: center;\n`;\n\nconst HeadingPage = styled.h1`\n  margin-top: 50px;\n  margin-bottom: 15px;\n`;\n\nconst Sections = styled.div`\n  display: flex;\n  gap: 0 50px;\n`;\n\nconst SectionCont = styled.section`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst HeadingSection = styled.h2`\n  margin-top: 25px;\n`;\n\nexport { ContactsCont, HeadingPage, HeadingSection, Sections, SectionCont };\n","import ContactForm from 'components/contactForm/ContactForm';\nimport Filter from 'components/filter/Filter';\nimport ContactList from 'components/contactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { getError, getIsLoading } from '../../redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport {\n  ContactsCont,\n  HeadingPage,\n  HeadingSection,\n  SectionCont,\n  Sections,\n} from './Contacts.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsCont>\n      <HeadingPage>Phonebook</HeadingPage>\n      <Sections>\n        <SectionCont>\n          <HeadingSection>New Contact</HeadingSection>\n          <ContactForm />\n        </SectionCont>\n        <SectionCont>\n          <HeadingSection>Contacts</HeadingSection>\n          <Filter />\n          <ContactList />\n        </SectionCont>\n      </Sections>\n      {isLoading && !error && <b>Request in progress...</b>}\n    </ContactsCont>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["FormCont","styled","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","value","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","currentTarget","name","elements","number","item","length","alert","addContact","reset","type","placeholder","pattern","title","required","Title","onChange","setFilter","handleFilterChange","target","ListCont","Item","ContactDetails","DeleteBtn","contactItems","includes","map","contact","onClick","deleteContact","id","ContactsCont","HeadingPage","Sections","SectionCont","HeadingSection","useEffect","fetchContacts"],"sourceRoot":""}